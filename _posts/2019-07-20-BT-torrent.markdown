---
layout: post
title:  "【转】BT种子以及磁力链接——去中心化网络"
date:   2019-07-20 12:00:00 -0700
categories: Network
tags: Network Protocol
description: BT种子原理，解决的痛点，固有的弱点，以及相应发展出的磁力链接如何解决这个弱点
---
### 总结自：
- [别再问我什么是 BT 种子](https://sspai.com/post/55502)

中心式服务器：
比如下载的人一多，每个人分配到的带宽就变小了，下载速度会变慢。更危险的是，这期视频是敏感资源，你的哥们本来就不应该分享给你，如果每羊被抓了，大家也都别下载了。  
-> 分散  
针对这些问题，美国工程师 Bram Cohen 在 2001 年发布了 BitTorrent 协议，资源不再由一个人或一个中心服务器提供，而是所有人提供给所有人，下载的人越多，速度越快。这种模式也叫 peer-to-peer（用户群对用户群），也就是我们常说的 P2P 下载。  
核心思想：把文件分成很多个小块，让下载者互相连接/交换。

种子文件，后缀名.torrent：BT种子——资源共享者生成的包含下载信息的种子文件。  
- 包含：文件名，大小，分块后每块文件的大小，哈希值，以及Tracker服务器的地址。  
- ！Tracker很重要！通过Tracker找到其他下载者的联系方式：  
	- eg. 下载软件打开种子后，联系种子文件内置的Tracker服务器，请求文件；服务器记录下IP，并返回其他正在下载或者下载完成的人的IP -> 组队下载。
	- eg2. 如果没有正在下载的人，且资源发布者也不在线？拜拜了您嘞（0kb/s）。
- so! Tracker服务器是P2P网络的弱点：若Tracker被关闭，则无法找到同伴，难以完成下载。

摆脱对Tracker服务器的依赖 -> 磁力链接（Magnet URI scheme），
- eg. magnet:?xt=urn:btih:1a427c8498f72b9a27fde87662dbeb6fc043fc47
- 标准格式 + 40个16进制数字。哈希值，文件ごとにunique。每个人都是小型Tracker，有动态更新的地址和文件信息。扩散开来。  
占用大量资源，效率低，有可能重复广播，造成广播灾难 -> + （逻辑）距离。  

构建DHT（分布式哈希表）网络：  
- 每个磁力链接：唯一的文件ID，有2 ^ (4 * 40) = 2 ^ 160种组合。  
- 发布文件后：可以计算知道的节点ID和这个文件ID的距离，计算出来距离最短的节点再计算它知道的节点和文件ID的距离，不断重复，直到找到与文件ID距离最短的一批节点，把下载信息存在那里。
- 下载者同样。
- 距离的具体计算？二叉树。下载者的ID，向上追溯，非自己的那一边的子树（不断向上，则节点不断变多），每层1个，叫做k-bucket。每个bucket都可以推算距离范围（用异或算距离，可转化成十进制方便理解，距离是连续的，毕竟算是），所以文件ID可以定位到对应的k-bucket。每个k-bucket我们实际都存了至少8个节点，即使有一个下线，也不会影响到整个网络。
- 2 ^ 160足够大，够所有人用，以及多文件。